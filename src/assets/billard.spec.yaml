openapi: 3.1.0
info:
  title: Billard API
  description: API für die Verwaltung von Billard-Spielen und Spielern
  version: 1.0.0
servers:
  - url: 'https://billard.bybrauns.com/api/v1'
    description: Billard API Produktionsserver
  - url: 'https://dev.billard.bybrauns.com/api/v1'
    description: Billard API Developmentserver
paths:
  '/home':
    get:
      summary: Home
      description: Zeigt aktuelle Spiele und deren Status an
      operationId: getHome
      parameters:
        - name: page
          in: query
          description: Seitennummer für die Paginierung
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          description: Anzahl der Spiele pro Seite
          schema:
            type: integer
            default: 10
      tags:
        - Home
      responses:
        '200':
          description: Liste der aktuellen Spiele erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeResponse'

  '/game':
    post:
      summary: Neues Spiel erstellen
      description: Erstellt ein neues Billard-Spiel mit den angegebenen Spielern
      operationId: createGame
      tags:
        - Game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                players:
                  type: array
                  items:
                    $ref: '#/components/schemas/PlayerInput'
      responses:
        '201':
          description: Spiel erfolgreich erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

  '/game/{gameId}/{action}':
    post:
      summary: Game Action
      description: Führt eine Aktion für ein bestimmtes Spiel aus
      operationId: gameAction
      tags:
        - Game
      parameters:
        - name: gameId
          in: path
          required: true
          description: ID des Spiels
          schema:
            type: string
        - name: action
          in: path
          required: true
          description: Auszuführende Aktion
          schema:
            type: string
            enum:
              - START
              - ABORT
              - PAUSE
              - RESUME
              - FINISH
      responses:
        '200':
          description: Aktion erfolgreich ausgeführt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Konflikt - Aktion kann im aktuellen Spielzustand nicht ausgeführt werden
          $ref: '#/components/responses/ServerError'

  '/game/{gameId}/events':
    get:
      summary: Spielereignisse
      description: Abonnieren Sie Ereignisse für ein bestimmtes Spiel. Dazu gehört der Spielstand, beigetretende Spieler und andere Spielereignisse.
      operationId: subscribeToGameEvents
      tags:
        - Game
      parameters:
        - name: gameId
          in: path
          required: true
          description: ID des Spiels
          schema:
            type: string
      responses:
        '200':
          description: Erfolgreich verbunden und empfängt Ereignisse
          content:
            text/event-stream:
              schema:
                $ref: '#/components/schemas/GameEvent'

  '/game/{gameId}/join':
    post:
      summary: Spieler zu einem Spiel hinzufügen
      description: Fügt einen Spieler zu einem bestehenden Spiel hinzu
      operationId: joinGame
      tags:
        - Game
      parameters:
        - name: gameId
          in: path
          required: true
          description: ID des Spiels
          schema:
            type: string
      responses:
        '200':
          description: Spieler erfolgreich hinzugefügt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '401':
          description: Unauthorisiert - Spieler kann nicht hinzugefügt werden
          $ref: '#/components/responses/ServerError'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Konflikt - Spieler kann nicht hinzugefügt werden
          $ref: '#/components/responses/ServerError'

  '/game/{gameId}':
    get:
      summary: Spiel abrufen
      description: Ruft die Details eines bestimmten Spiels ab
      operationId: getGame
      tags:
        - Game
      parameters:
        - name: gameId
          in: path
          required: true
          description: ID des Spiels
          schema:
            type: string
      responses:
        '200':
          description: Spieldetails erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
components:
  responses:
    NotFound:
      description: Ressource nicht gefunden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Serverfehler
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Fehlerbeschreibung
      required:
        - message

    PlayerInput:
      type: object
      properties:
        name:
          type: string
          description: Name des Spielers
      required:
        - name

    HomeResponse:
      type: object
      properties:
        gamePage:
          $ref: '#/components/schemas/GamePage'
        activeGamesOfUser:
          type: array
          items:
            type: string
            description: Liste der Spiele Ids, an denen der Benutzer aktiv teilnimmt und noch nicht beendet sind
        gameToListen:
          type: string
          description: ID des Spiels, das der Benutzer abonniert hat oder abonnieren möchte
      required:
        - gamePage

    Player:
      type: object
      properties:
        name:
          type: string
          description: Name des Spielers
      required:
        - name

    GameStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - PAUSED
        - FINISHED
        - ABORTED
      description: Aktueller Status des Spiels

    GamePage:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/Game'
        totalElements:
          type: integer
        totalPages:
          type: integer
        number:
          type: integer
        size:
          type: integer
      required:
        - content
        - totalElements
        - totalPages
        - number
        - size

    Game:
      type: object
      properties:
        id:
          type: string
          description: ID des Spiels
        createDate:
          type: string
          format: date-time
          description: Datum und Zeit der Spiel Erstellung
        startDate:
          type: string
          format: date-time
          description: Datum und Zeit des Spiels
          nullable: true
        endDate:
          type: string
          format: date-time
          description: Datum und Zeit des Spiels
          nullable: true
        duration:
          type: integer
          description: Dauer des Spiels in Minuten
          nullable: true
        winners:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          nullable: true
        status:
          $ref: '#/components/schemas/GameStatus'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: Liste der teilnehmenden Spieler
        actions:
          $ref: '#/components/schemas/GameActions'
      required:
        - id
        - date
        - status
        - players
        - actions


    GameEvent:
      type: object
      properties:
        type:
          type: string
          enum:
            - GAME_STARTED
            - GAME_ABORTED
            - GAME_PAUSED
            - GAME_RESUMED
            - GAME_FINISHED
            - PLAYER_ADDED
            - PLAYER_REMOVED
        game:
          $ref: '#/components/schemas/Game'
        extra:
          type: object
      required:
        - type
        - game

    GameActions:
      type: array
      items:
        type: string
        enum:
          - START
          - ABORT
          - PAUSE
          - RESUME
          - FINISH
      description: Liste der möglichen Aktionen im aktuellen Spielzustand
